CREATE DATABASE IF NOT EXISTS moviedb;
CREATE TABLE movies(
    id VARCHAR(10) PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    year INTEGER NOT NULL,
    director VARCHAR(100) NOT NULL
);
CREATE TABLE stars(
    id VARCHAR(10) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    birthYear INTEGER
);
CREATE TABLE stars_in_movies(
    starId VARCHAR(10) NOT NULL,
    movieId VARCHAR(10) NOT NULL,
    FOREIGN KEY (starId) REFERENCES stars(id),
    FOREIGN KEY (movieId) REFERENCES movies(id)
);
CREATE TABLE genres(
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(32) NOT NULL
);
CREATE TABLE genres_in_movies(
    genreId INTEGER NOT NULL,
    movieId VARCHAR(10) NOT NULL,
    FOREIGN KEY (genreId) REFERENCES genres(id),
    FOREIGN KEY (movieId) REFERENCES movies(id)
);
CREATE TABLE creditcards(
	ccId VARCHAR(20) PRIMARY KEY,
	firstName VARCHAR(50) NOT NULL,
	lastName VARCHAR(50) NOT NULL,
	expiration DATE NOT NULL
);
CREATE TABLE customers(
	customerId INTEGER PRIMARY KEY AUTO_INCREMENT,
	firstName VARCHAR(50) NOT NULL,
	lastName VARCHAR(50) NOT NULL,
	ccId VARCHAR(20) NOT NULL,
	address VARCHAR(20) NOT NULL,
	email VARCHAR(50) NOT NULL,
	password VARCHAR(20) NOT NULL,
	FOREIGN KEY (ccId) REFERENCES creditcards(ccId)
);
CREATE TABLE sales(
	salesId INTEGER PRIMARY KEY AUTO_INCREMENT,
	customerId INTEGER NOT NULL,
	movieId VARCHAR(10) NOT NULL,
	saleDate DATE NOT NULL,
	FOREIGN KEY (customerId) REFERENCES customers(customerId),
	FOREIGN KEY (movieId) REFERENCES movies(id)
);
CREATE TABLE ratings(
	movieId VARCHAR(10) NOT NULL,
	rating FLOAT	NOT NULL,
	numVotes INTEGER NOT NULL,
	FOREIGN KEY (movieId) REFERENCES movies(id)
);

ALTER TABLE sales ADD quantity INTEGER DEFAULT 1;
ALTER TABLE movies ADD FULLTEXT(title);
